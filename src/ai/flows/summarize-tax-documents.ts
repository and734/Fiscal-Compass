// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Summarizes uploaded tax documents to extract key information.
 *
 * - summarizeTaxDocuments - A function that accepts tax documents and returns a summary.
 * - SummarizeTaxDocumentsInput - The input type for the summarizeTaxDocuments function.
 * - SummarizeTaxDocumentsOutput - The return type for the summarizeTaxDocuments function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SummarizeTaxDocumentsInputSchema = z.object({
  taxDocumentDataUri: z
    .string()
    .describe(
      "A tax document, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type SummarizeTaxDocumentsInput = z.infer<typeof SummarizeTaxDocumentsInputSchema>;

const SummarizeTaxDocumentsOutputSchema = z.object({
  summary: z.string().describe('A summary of the key information in the tax document.'),
});
export type SummarizeTaxDocumentsOutput = z.infer<typeof SummarizeTaxDocumentsOutputSchema>;

export async function summarizeTaxDocuments(input: SummarizeTaxDocumentsInput): Promise<SummarizeTaxDocumentsOutput> {
  return summarizeTaxDocumentsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'summarizeTaxDocumentsPrompt',
  input: {schema: SummarizeTaxDocumentsInputSchema},
  output: {schema: SummarizeTaxDocumentsOutputSchema},
  prompt: `You are an expert tax advisor. Please summarize the key information from the following tax document: {{media url=taxDocumentDataUri}}`,
});

const summarizeTaxDocumentsFlow = ai.defineFlow(
  {
    name: 'summarizeTaxDocumentsFlow',
    inputSchema: SummarizeTaxDocumentsInputSchema,
    outputSchema: SummarizeTaxDocumentsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
